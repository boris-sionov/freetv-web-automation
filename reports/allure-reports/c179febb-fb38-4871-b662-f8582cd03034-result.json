{"name": "test_04_enter_otp_code", "status": "broken", "statusDetails": {"message": "playwright._impl._errors.Error: Event loop is closed! Is Playwright already stopped?", "trace": "request = <SubRequest 'setup_class' for <Function test_01_open_freetv_website>>\nbrowser = <Browser type=<BrowserType name=chromium executable_path=/Users/borissionov/Library/Caches/ms-playwright/chromium-1161/chrome-mac/Chromium.app/Contents/MacOS/Chromium> version=134.0.6998.35>\n\n    @pytest.fixture(scope=\"class\", autouse=True)\n    def setup_class(request, browser):\n        # Create a new context and page using the provided browser instance\n>       context = browser.new_context(\n            viewport={\"width\": 1920, \"height\": 1080},  # Simulate full screen\n            # screen={\"width\": 1920, \"height\": 1080}\n        )\n\nconftest.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Browser type=<BrowserType name=chromium executable_path=/Users/borissionov/Library/Caches/ms-playwright/chromium-1161/chrome-mac/Chromium.app/Contents/MacOS/Chromium> version=134.0.6998.35>\n\n    def new_context(\n        self,\n        *,\n        viewport: typing.Optional[ViewportSize] = None,\n        screen: typing.Optional[ViewportSize] = None,\n        no_viewport: typing.Optional[bool] = None,\n        ignore_https_errors: typing.Optional[bool] = None,\n        java_script_enabled: typing.Optional[bool] = None,\n        bypass_csp: typing.Optional[bool] = None,\n        user_agent: typing.Optional[str] = None,\n        locale: typing.Optional[str] = None,\n        timezone_id: typing.Optional[str] = None,\n        geolocation: typing.Optional[Geolocation] = None,\n        permissions: typing.Optional[typing.Sequence[str]] = None,\n        extra_http_headers: typing.Optional[typing.Dict[str, str]] = None,\n        offline: typing.Optional[bool] = None,\n        http_credentials: typing.Optional[HttpCredentials] = None,\n        device_scale_factor: typing.Optional[float] = None,\n        is_mobile: typing.Optional[bool] = None,\n        has_touch: typing.Optional[bool] = None,\n        color_scheme: typing.Optional[\n            Literal[\"dark\", \"light\", \"no-preference\", \"null\"]\n        ] = None,\n        reduced_motion: typing.Optional[\n            Literal[\"no-preference\", \"null\", \"reduce\"]\n        ] = None,\n        forced_colors: typing.Optional[Literal[\"active\", \"none\", \"null\"]] = None,\n        contrast: typing.Optional[Literal[\"more\", \"no-preference\", \"null\"]] = None,\n        accept_downloads: typing.Optional[bool] = None,\n        default_browser_type: typing.Optional[str] = None,\n        proxy: typing.Optional[ProxySettings] = None,\n        record_har_path: typing.Optional[typing.Union[str, pathlib.Path]] = None,\n        record_har_omit_content: typing.Optional[bool] = None,\n        record_video_dir: typing.Optional[typing.Union[str, pathlib.Path]] = None,\n        record_video_size: typing.Optional[ViewportSize] = None,\n        storage_state: typing.Optional[\n            typing.Union[StorageState, str, pathlib.Path]\n        ] = None,\n        base_url: typing.Optional[str] = None,\n        strict_selectors: typing.Optional[bool] = None,\n        service_workers: typing.Optional[Literal[\"allow\", \"block\"]] = None,\n        record_har_url_filter: typing.Optional[\n            typing.Union[str, typing.Pattern[str]]\n        ] = None,\n        record_har_mode: typing.Optional[Literal[\"full\", \"minimal\"]] = None,\n        record_har_content: typing.Optional[Literal[\"attach\", \"embed\", \"omit\"]] = None,\n        client_certificates: typing.Optional[typing.List[ClientCertificate]] = None,\n    ) -> \"BrowserContext\":\n        \"\"\"Browser.new_context\n    \n        Creates a new browser context. It won't share cookies/cache with other browser contexts.\n    \n        **NOTE** If directly using this method to create `BrowserContext`s, it is best practice to explicitly close the\n        returned context via `browser_context.close()` when your code is done with the `BrowserContext`, and before\n        calling `browser.close()`. This will ensure the `context` is closed gracefully and any artifacts—like HARs\n        and videos—are fully flushed and saved.\n    \n        **Usage**\n    \n        ```py\n        browser = playwright.firefox.launch() # or \\\"chromium\\\" or \\\"webkit\\\".\n        # create a new incognito browser context.\n        context = browser.new_context()\n        # create a new page in a pristine context.\n        page = context.new_page()\n        page.goto(\\\"https://example.com\\\")\n    \n        # gracefully close up everything\n        context.close()\n        browser.close()\n        ```\n    \n        Parameters\n        ----------\n        viewport : Union[{width: int, height: int}, None]\n            Sets a consistent viewport for each page. Defaults to an 1280x720 viewport. `no_viewport` disables the fixed\n            viewport. Learn more about [viewport emulation](../emulation.md#viewport).\n        screen : Union[{width: int, height: int}, None]\n            Emulates consistent window screen size available inside web page via `window.screen`. Is only used when the\n            `viewport` is set.\n        no_viewport : Union[bool, None]\n            Does not enforce fixed viewport, allows resizing window in the headed mode.\n        ignore_https_errors : Union[bool, None]\n            Whether to ignore HTTPS errors when sending network requests. Defaults to `false`.\n        java_script_enabled : Union[bool, None]\n            Whether or not to enable JavaScript in the context. Defaults to `true`. Learn more about\n            [disabling JavaScript](../emulation.md#javascript-enabled).\n        bypass_csp : Union[bool, None]\n            Toggles bypassing page's Content-Security-Policy. Defaults to `false`.\n        user_agent : Union[str, None]\n            Specific user agent to use in this context.\n        locale : Union[str, None]\n            Specify user locale, for example `en-GB`, `de-DE`, etc. Locale will affect `navigator.language` value,\n            `Accept-Language` request header value as well as number and date formatting rules. Defaults to the system default\n            locale. Learn more about emulation in our [emulation guide](../emulation.md#locale--timezone).\n        timezone_id : Union[str, None]\n            Changes the timezone of the context. See\n            [ICU's metaZones.txt](https://cs.chromium.org/chromium/src/third_party/icu/source/data/misc/metaZones.txt?rcl=faee8bc70570192d82d2978a71e2a615788597d1)\n            for a list of supported timezone IDs. Defaults to the system timezone.\n        geolocation : Union[{latitude: float, longitude: float, accuracy: Union[float, None]}, None]\n        permissions : Union[Sequence[str], None]\n            A list of permissions to grant to all pages in this context. See `browser_context.grant_permissions()` for\n            more details. Defaults to none.\n        extra_http_headers : Union[Dict[str, str], None]\n            An object containing additional HTTP headers to be sent with every request. Defaults to none.\n        offline : Union[bool, None]\n            Whether to emulate network being offline. Defaults to `false`. Learn more about\n            [network emulation](../emulation.md#offline).\n        http_credentials : Union[{username: str, password: str, origin: Union[str, None], send: Union[\"always\", \"unauthorized\", None]}, None]\n            Credentials for [HTTP authentication](https://developer.mozilla.org/en-US/docs/Web/HTTP/Authentication). If no\n            origin is specified, the username and password are sent to any servers upon unauthorized responses.\n        device_scale_factor : Union[float, None]\n            Specify device scale factor (can be thought of as dpr). Defaults to `1`. Learn more about\n            [emulating devices with device scale factor](../emulation.md#devices).\n        is_mobile : Union[bool, None]\n            Whether the `meta viewport` tag is taken into account and touch events are enabled. isMobile is a part of device,\n            so you don't actually need to set it manually. Defaults to `false` and is not supported in Firefox. Learn more\n            about [mobile emulation](../emulation.md#ismobile).\n        has_touch : Union[bool, None]\n            Specifies if viewport supports touch events. Defaults to false. Learn more about\n            [mobile emulation](../emulation.md#devices).\n        color_scheme : Union[\"dark\", \"light\", \"no-preference\", \"null\", None]\n            Emulates [prefers-colors-scheme](https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-color-scheme)\n            media feature, supported values are `'light'` and `'dark'`. See `page.emulate_media()` for more details.\n            Passing `'null'` resets emulation to system defaults. Defaults to `'light'`.\n        reduced_motion : Union[\"no-preference\", \"null\", \"reduce\", None]\n            Emulates `'prefers-reduced-motion'` media feature, supported values are `'reduce'`, `'no-preference'`. See\n            `page.emulate_media()` for more details. Passing `'null'` resets emulation to system defaults. Defaults to\n            `'no-preference'`.\n        forced_colors : Union[\"active\", \"none\", \"null\", None]\n            Emulates `'forced-colors'` media feature, supported values are `'active'`, `'none'`. See\n            `page.emulate_media()` for more details. Passing `'null'` resets emulation to system defaults. Defaults to\n            `'none'`.\n        contrast : Union[\"more\", \"no-preference\", \"null\", None]\n            Emulates `'prefers-contrast'` media feature, supported values are `'no-preference'`, `'more'`. See\n            `page.emulate_media()` for more details. Passing `'null'` resets emulation to system defaults. Defaults to\n            `'no-preference'`.\n        accept_downloads : Union[bool, None]\n            Whether to automatically download all the attachments. Defaults to `true` where all the downloads are accepted.\n        proxy : Union[{server: str, bypass: Union[str, None], username: Union[str, None], password: Union[str, None]}, None]\n            Network proxy settings to use with this context. Defaults to none.\n        record_har_path : Union[pathlib.Path, str, None]\n            Enables [HAR](http://www.softwareishard.com/blog/har-12-spec) recording for all pages into the specified HAR file\n            on the filesystem. If not specified, the HAR is not recorded. Make sure to call `browser_context.close()`\n            for the HAR to be saved.\n        record_har_omit_content : Union[bool, None]\n            Optional setting to control whether to omit request content from the HAR. Defaults to `false`.\n        record_video_dir : Union[pathlib.Path, str, None]\n            Enables video recording for all pages into the specified directory. If not specified videos are not recorded. Make\n            sure to call `browser_context.close()` for videos to be saved.\n        record_video_size : Union[{width: int, height: int}, None]\n            Dimensions of the recorded videos. If not specified the size will be equal to `viewport` scaled down to fit into\n            800x800. If `viewport` is not configured explicitly the video size defaults to 800x450. Actual picture of each page\n            will be scaled down if necessary to fit the specified size.\n        storage_state : Union[pathlib.Path, str, {cookies: Sequence[{name: str, value: str, domain: str, path: str, expires: float, httpOnly: bool, secure: bool, sameSite: Union[\"Lax\", \"None\", \"Strict\"]}], origins: Sequence[{origin: str, localStorage: Sequence[{name: str, value: str}]}]}, None]\n            Learn more about [storage state and auth](../auth.md).\n    \n            Populates context with given storage state. This option can be used to initialize context with logged-in\n            information obtained via `browser_context.storage_state()`.\n        base_url : Union[str, None]\n            When using `page.goto()`, `page.route()`, `page.wait_for_url()`,\n            `page.expect_request()`, or `page.expect_response()` it takes the base URL in consideration by\n            using the [`URL()`](https://developer.mozilla.org/en-US/docs/Web/API/URL/URL) constructor for building the\n            corresponding URL. Unset by default. Examples:\n            - baseURL: `http://localhost:3000` and navigating to `/bar.html` results in `http://localhost:3000/bar.html`\n            - baseURL: `http://localhost:3000/foo/` and navigating to `./bar.html` results in\n              `http://localhost:3000/foo/bar.html`\n            - baseURL: `http://localhost:3000/foo` (without trailing slash) and navigating to `./bar.html` results in\n              `http://localhost:3000/bar.html`\n        strict_selectors : Union[bool, None]\n            If set to true, enables strict selectors mode for this context. In the strict selectors mode all operations on\n            selectors that imply single target DOM element will throw when more than one element matches the selector. This\n            option does not affect any Locator APIs (Locators are always strict). Defaults to `false`. See `Locator` to learn\n            more about the strict mode.\n        service_workers : Union[\"allow\", \"block\", None]\n            Whether to allow sites to register Service workers. Defaults to `'allow'`.\n            - `'allow'`: [Service Workers](https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API) can be\n              registered.\n            - `'block'`: Playwright will block all registration of Service Workers.\n        record_har_url_filter : Union[Pattern[str], str, None]\n        record_har_mode : Union[\"full\", \"minimal\", None]\n            When set to `minimal`, only record information necessary for routing from HAR. This omits sizes, timing, page,\n            cookies, security and other types of HAR information that are not used when replaying from HAR. Defaults to `full`.\n        record_har_content : Union[\"attach\", \"embed\", \"omit\", None]\n            Optional setting to control resource content management. If `omit` is specified, content is not persisted. If\n            `attach` is specified, resources are persisted as separate files and all of these files are archived along with the\n            HAR file. Defaults to `embed`, which stores content inline the HAR file as per HAR specification.\n        client_certificates : Union[Sequence[{origin: str, certPath: Union[pathlib.Path, str, None], cert: Union[bytes, None], keyPath: Union[pathlib.Path, str, None], key: Union[bytes, None], pfxPath: Union[pathlib.Path, str, None], pfx: Union[bytes, None], passphrase: Union[str, None]}], None]\n            TLS Client Authentication allows the server to request a client certificate and verify it.\n    \n            **Details**\n    \n            An array of client certificates to be used. Each certificate object must have either both `certPath` and `keyPath`,\n            a single `pfxPath`, or their corresponding direct value equivalents (`cert` and `key`, or `pfx`). Optionally,\n            `passphrase` property should be provided if the certificate is encrypted. The `origin` property should be provided\n            with an exact match to the request origin that the certificate is valid for.\n    \n            **NOTE** When using WebKit on macOS, accessing `localhost` will not pick up client certificates. You can make it\n            work by replacing `localhost` with `local.playwright`.\n    \n    \n        Returns\n        -------\n        BrowserContext\n        \"\"\"\n    \n        return mapping.from_impl(\n>           self._sync(\n                self._impl_obj.new_context(\n                    viewport=viewport,\n                    screen=screen,\n                    noViewport=no_viewport,\n                    ignoreHTTPSErrors=ignore_https_errors,\n                    javaScriptEnabled=java_script_enabled,\n                    bypassCSP=bypass_csp,\n                    userAgent=user_agent,\n                    locale=locale,\n                    timezoneId=timezone_id,\n                    geolocation=geolocation,\n                    permissions=mapping.to_impl(permissions),\n                    extraHTTPHeaders=mapping.to_impl(extra_http_headers),\n                    offline=offline,\n                    httpCredentials=http_credentials,\n                    deviceScaleFactor=device_scale_factor,\n                    isMobile=is_mobile,\n                    hasTouch=has_touch,\n                    colorScheme=color_scheme,\n                    reducedMotion=reduced_motion,\n                    forcedColors=forced_colors,\n                    contrast=contrast,\n                    acceptDownloads=accept_downloads,\n                    defaultBrowserType=default_browser_type,\n                    proxy=proxy,\n                    recordHarPath=record_har_path,\n                    recordHarOmitContent=record_har_omit_content,\n                    recordVideoDir=record_video_dir,\n                    recordVideoSize=record_video_size,\n                    storageState=storage_state,\n                    baseURL=base_url,\n                    strictSelectors=strict_selectors,\n                    serviceWorkers=service_workers,\n                    recordHarUrlFilter=record_har_url_filter,\n                    recordHarMode=record_har_mode,\n                    recordHarContent=record_har_content,\n                    clientCertificates=client_certificates,\n                )\n            )\n        )\nE       playwright._impl._errors.Error: Event loop is closed! Is Playwright already stopped?\n\n../.venv/lib/python3.13/site-packages/playwright/sync_api/_generated.py:13967: Error"}, "description": "Test 04 - Fill in OTP code received from email`", "start": 1745713721226, "stop": 1745713721226, "uuid": "4fc248b5-8b46-4800-8230-2da138884646", "historyId": "1f4923d8630f0c47c51e502b722f0d2c", "testCaseId": "1f4923d8630f0c47c51e502b722f0d2c", "fullName": "tests.test_registration.TestLogin#test_04_enter_otp_code", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('setup_class')"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_registration"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "Boriss-MBP-4"}, {"name": "thread", "value": "32310-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_registration"}]}